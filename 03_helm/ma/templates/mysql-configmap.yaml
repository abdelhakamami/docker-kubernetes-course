{{- if  .Values.mysql.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-configmap
data:
  #change db name line12-13 !! change it on user assignment !!
  init.sql: |-
        SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
        START TRANSACTION;
        SET time_zone = "+00:00";

        --
        -- !IMPORTANT : CHANGE abdel_hak BEFORE EXECUTING THIS SCRIPT
        --

        --
        -- Database: `abdel_hak`  --- ! IMPORTANT : CHANGE abdel_hak BEFORE EXECUTING THIS SCRIPT
        --
        CREATE DATABASE IF NOT EXISTS `abdel_hak` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
        USE `abdel_hak`;
        -- --------------------------------------------------------


        CREATE TABLE `modules` ( `id` int UNSIGNED NOT NULL, `module` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL, `created_at` int UNSIGNED NOT NULL, `created_by` int UNSIGNED DEFAULT NULL, `updated_at` int UNSIGNED DEFAULT NULL, `updated_by` int UNSIGNED DEFAULT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci; INSERT INTO `modules` (`id`, `module`, `created_at`, `created_by`, `updated_at`, `updated_by`) VALUES (1, 'Modules', 1669742543, 0, NULL, NULL), (2, 'Permissions', 1669743036, 0, NULL, NULL), (3, 'Roles', 1669743054, 0, NULL, NULL), (4, 'Users', 1669743087, 0, NULL, NULL);

        DELIMITER /// 
        CREATE TRIGGER `prevent_default_modules_delete` BEFORE DELETE ON `modules` 
        FOR EACH ROW 
        BEGIN 
        IF OLD.id IN (1,2,3,4) THEN SIGNAL SQLSTATE '42003' SET MESSAGE_TEXT = 'Deleting default modules is forbidden'; END IF; 
        END; ///  

        CREATE TRIGGER `prevent_default_modules_update` BEFORE UPDATE ON `modules` 
        FOR EACH ROW 
        BEGIN 
        IF OLD.id IN (1,2,3,4) THEN SIGNAL SQLSTATE '42003' SET MESSAGE_TEXT = 'Updating default modules is forbidden'; END IF; 
        END; /// 

        DELIMITER ; 

        CREATE TABLE `permissions` ( `id` int UNSIGNED NOT NULL, `permission` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL, `permission_slug` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL, `module_id` int UNSIGNED NOT NULL, `created_at` int UNSIGNED NOT NULL, `created_by` int UNSIGNED DEFAULT NULL, `updated_at` int UNSIGNED DEFAULT NULL, `updated_by` int UNSIGNED DEFAULT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci; INSERT INTO `permissions` (`id`, `permission`, `permission_slug`, `module_id`, `created_at`, `created_by`, `updated_at`, `updated_by`) VALUES (1, 'Access Modules', 'access-modules', 1, 1670424670, 0, NULL, NULL), (2, 'Add Modules', 'add-modules', 1, 1670425591, 0, NULL, NULL), (3, 'Update Modules', 'update-modules', 1, 1670425606, 0, NULL, NULL), (4, 'Delete Modules', 'delete-modules', 1, 1670425617, 0, NULL, NULL), (5, 'Access Permissions', 'access-permissions', 2, 1670425718, 0, NULL, NULL), (6, 'Add Permissions', 'add-permissions', 2, 1670425728, 0, NULL, NULL), (7, 'Update Permissions', 'update-permissions', 2, 1670425734, 0, NULL, NULL), (8, 'Delete Permissions', 'delete-permissions', 2, 1670425745, 0, NULL, NULL), (9, 'Access Roles', 'access-roles', 3, 1670425776, 0, NULL, NULL), (10, 'Add Roles', 'add-roles', 3, 1670425779, 0, NULL, NULL), (11, 'Update Roles', 'update-roles', 3, 1670425801, 0, NULL, NULL), (12, 'Delete Roles', 'delete-roles', 3, 1670425808, 0, NULL, NULL), (13, 'Access Users', 'access-users', 4, 1670425907, 0, NULL, NULL), (14, 'Add Users', 'add-users', 4, 1670425912, 0, NULL, NULL), (15, 'Update Users', 'update-users', 4, 1670425917, 0, NULL, NULL), (16, 'Update Users State', 'update-users-state', 4, 1670425920, 0, NULL, NULL), (17, 'Delete Users', 'delete-users', 4, 1670425922, 0, NULL, NULL); 

        DELIMITER /// 
        CREATE TRIGGER `prevent_default_permissions_delete` BEFORE DELETE ON `permissions` FOR EACH ROW 
        BEGIN 
        IF OLD.id>=1 AND OLD.id<=17 THEN SIGNAL SQLSTATE '42003' SET MESSAGE_TEXT = 'Deleting default permissions is forbidden'; END IF; 
        END; /// 

        CREATE TRIGGER `prevent_default_permissions_update` BEFORE UPDATE ON `permissions` FOR EACH ROW 
        BEGIN 
        IF OLD.id>=1 AND OLD.id<=17 THEN SIGNAL SQLSTATE '42003' SET MESSAGE_TEXT = 'Updating default permissions is forbidden'; END IF; 
        END; /// 

        DELIMITER ; 

        CREATE TABLE `roles` ( `id` int UNSIGNED NOT NULL, `role` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL, `rbs` tinyint UNSIGNED NOT NULL DEFAULT '0', `created_at` int UNSIGNED NOT NULL, `created_by` int UNSIGNED DEFAULT NULL, `updated_at` int UNSIGNED DEFAULT NULL, `updated_by` int UNSIGNED DEFAULT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci; INSERT INTO `roles` (`id`, `role`, `rbs`, `created_at`, `created_by`, `updated_at`, `updated_by`) VALUES (0, 'Apollo 11', 1, 1668181171, NULL, NULL, NULL), (1, 'RBAC Administrator', 1, 1678469933, 0, NULL, NULL); 

        DELIMITER ///
        CREATE TRIGGER `prevent_default_role_delete` BEFORE DELETE ON `roles` FOR EACH ROW 
        BEGIN 
        IF OLD.id=0 THEN SIGNAL SQLSTATE '42003' SET MESSAGE_TEXT = 'Deleting default role is forbidden'; END IF; 
        END; /// 

        CREATE TRIGGER `prevent_default_role_update` BEFORE UPDATE ON `roles` FOR EACH ROW
        BEGIN
        IF OLD.id=0 THEN SIGNAL SQLSTATE '42003' SET MESSAGE_TEXT = 'Updating default role is forbidden'; END IF;
        END; /// 

        DELIMITER ; 

        CREATE TABLE `roles_permissions` ( `id` int UNSIGNED NOT NULL, `role_id` int UNSIGNED NOT NULL, `permission_id` int UNSIGNED NOT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci; INSERT INTO `roles_permissions` (`id`, `role_id`, `permission_id`) VALUES (1, 0, 1), (2, 0, 2), (3, 0, 3), (4, 0, 4), (5, 0, 5), (6, 0, 6), (7, 0, 7), (8, 0, 8), (9, 0, 9), (10, 0, 10), (11, 0, 11), (12, 0, 12), (13, 0, 13), (14, 0, 14), (15, 0, 15), (16, 0, 16), (17, 0, 17), (18, 1, 1), (19, 1, 2), (20, 1, 3), (21, 1, 4), (22, 1, 5), (23, 1, 6), (24, 1, 7), (25, 1, 8), (26, 1, 9), (27, 1, 10), (28, 1, 11), (29, 1, 12), (30, 1, 13), (31, 1, 14), (32, 1, 15), (33, 1, 16), (34, 1, 17); CREATE TABLE `users` ( `id` int UNSIGNED NOT NULL, `rkey` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL, `login` varchar(55) COLLATE utf8mb4_general_ci NOT NULL, `pwd` varchar(80) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL, `name` varchar(55) COLLATE utf8mb4_general_ci NOT NULL, `email` varchar(55) COLLATE utf8mb4_general_ci NOT NULL, `active` tinyint UNSIGNED NOT NULL DEFAULT '1', `is_deleted` tinyint UNSIGNED NOT NULL DEFAULT '0', `role_id` int UNSIGNED DEFAULT NULL, `last_login` int UNSIGNED DEFAULT NULL, `created_at` int UNSIGNED NOT NULL, `created_by` int UNSIGNED DEFAULT NULL, `updated_at` int UNSIGNED DEFAULT NULL, `updated_by` int UNSIGNED DEFAULT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci; INSERT INTO `users` 
        (`id`, `rkey`, `login`, `pwd`, `name`, `email`, `active`, `is_deleted`, `role_id`, `last_login`, `created_at`, `created_by`, `updated_at`, `updated_by`) VALUES (0, '0608beed8c5a2a0c3017294b9f95a0', 'armstrong', '$2a$10$1SC5ncy670vRJA1.CiobjeNGs1NQoXMY4/25jOTgJzz1eljJPnBOC', 'Armstrong', 'armstrong@avaxia-group.com', 1, 0, 0, NULL, 1668181172, NULL, NULL, NULL), (1, 'n9gz52flakjqd5czdgr20lrkuyjop81', 'rbacadmin', '$2a$10$vQDl4/wp0Ckbi8LhHfqBgOZqgq6Dr.Isty3rlIfqKt23xcZtoSmPC', 'RBAC Admin', 'mansouri@thepoey.com', 1, 0, 1, NULL, 1678470489, 0, NULL, NULL); 

        DELIMITER ///
        CREATE TRIGGER `prevent_default_user_delete` BEFORE DELETE ON `users` FOR EACH ROW 
        BEGIN 
        IF OLD.id=0 THEN SIGNAL SQLSTATE '42003' SET MESSAGE_TEXT = 'Deleting default user is forbidden'; END IF; 
        END; ///

        CREATE TRIGGER `prevent_default_user_update` BEFORE UPDATE ON `users` FOR EACH ROW 
        BEGIN 
        IF OLD.id=0 THEN SIGNAL SQLSTATE '42003' SET MESSAGE_TEXT = 'Updating default user is forbidden'; END IF; 
        END; /// 

        DELIMITER ; 

        ALTER TABLE `modules` ADD PRIMARY KEY (`id`), ADD UNIQUE KEY `UNIQUE_module` (`module`), ADD KEY `fk_module_createdby` (`created_by`), ADD KEY `fk_module_updatedby` (`updated_by`); ALTER TABLE `permissions` ADD PRIMARY KEY (`id`), ADD UNIQUE KEY `UNIQUE_permission` (`permission`), ADD UNIQUE KEY `UNIQUE_permission_slug` (`permission_slug`), ADD KEY `fk_module` (`module_id`), ADD KEY `fk_permission_createdby` (`created_by`), ADD KEY `fk_permission_updatedby` (`updated_by`); ALTER TABLE `roles` ADD PRIMARY KEY (`id`), ADD UNIQUE KEY `UNIQUE_role` (`role`), ADD KEY `fk_role_createdby` (`created_by`), ADD KEY `fk_role_updatedby` (`updated_by`); ALTER TABLE `roles_permissions` ADD PRIMARY KEY (`id`), ADD UNIQUE KEY `UNIQUE_assignment` (`role_id`,`permission_id`), ADD KEY `fk_permission` (`permission_id`); ALTER TABLE `users` ADD PRIMARY KEY (`id`), ADD UNIQUE KEY `UNIQUE_rkey` (`rkey`) USING BTREE, ADD UNIQUE KEY `UNIQUE_email` (`email`) USING BTREE, ADD UNIQUE KEY `UNIQUE_login` (`login`) USING BTREE, ADD KEY `fk_user_role` (`role_id`), ADD KEY `fk_user_createdby` (`created_by`), ADD KEY `fk_user_updatedby` (`updated_by`); ALTER TABLE `modules` MODIFY `id` int UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5; ALTER TABLE `permissions` MODIFY `id` int UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=18; ALTER TABLE `roles` MODIFY `id` int UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2; ALTER TABLE `roles_permissions` MODIFY `id` int UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=35; ALTER TABLE `users` MODIFY `id` int UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2; ALTER TABLE `modules` ADD CONSTRAINT `fk_module_createdby` FOREIGN KEY (`created_by`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, ADD CONSTRAINT `fk_module_updatedby` FOREIGN KEY (`updated_by`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE; ALTER TABLE `permissions` ADD CONSTRAINT `fk_module` FOREIGN KEY (`module_id`) REFERENCES `modules` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, ADD CONSTRAINT `fk_permission_createdby` FOREIGN KEY (`created_by`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, ADD CONSTRAINT `fk_permission_updatedby` FOREIGN KEY (`updated_by`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE; ALTER TABLE `roles` ADD CONSTRAINT `fk_role_createdby` FOREIGN KEY (`created_by`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, ADD CONSTRAINT `fk_role_updatedby` FOREIGN KEY (`updated_by`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE; ALTER TABLE `roles_permissions` ADD CONSTRAINT `fk_permission` FOREIGN KEY (`permission_id`) REFERENCES `permissions` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, ADD CONSTRAINT `fk_role` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE; ALTER TABLE `users` ADD CONSTRAINT `fk_user_createdby` FOREIGN KEY (`created_by`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, ADD CONSTRAINT `fk_user_role` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, ADD CONSTRAINT `fk_user_updatedby` FOREIGN KEY (`updated_by`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

        COMMIT;
            

{{- end}}